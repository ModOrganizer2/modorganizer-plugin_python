from __future__ import annotations

import typing

import PyQt6.QtWidgets

__all__ = [
    "CustomWidget",
    "get",
    "heightForWidth",
    "is_alive",
    "is_owned_cpp",
    "make_widget_own_cpp",
    "make_widget_own_py",
    "send_to_cpp",
    "set_parent",
]

class CustomWidget:
    def __getattr__(self, arg0: str) -> typing.Any: ...
    def __init__(
        self, name: str, parent: PyQt6.QtWidgets.QWidget | None = None
    ) -> None: ...
    def _widget(self) -> PyQt6.QtWidgets.QWidget: ...
    def set_parent_cpp(self) -> None: ...

def get(arg0: str) -> PyQt6.QtWidgets.QWidget: ...
def heightForWidth(arg0: str, arg1: int) -> int: ...
def is_alive(arg0: str) -> bool: ...
def is_owned_cpp(arg0: str) -> bool: ...
def make_widget_own_cpp(arg0: str) -> PyQt6.QtWidgets.QWidget: ...
def make_widget_own_py(arg0: str) -> PyQt6.QtWidgets.QWidget: ...
def send_to_cpp(arg0: str, arg1: PyQt6.QtWidgets.QWidget) -> None: ...
def set_parent(arg0: PyQt6.QtWidgets.QWidget) -> None: ...
